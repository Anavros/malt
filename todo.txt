
Todo:
- New public function that:
    - accepts a list of functions with type annotations,
    - parses the annotations into signature objects,
    - calls malt.offer with the signatures and returns a response.

Bugs:
- Comment chars can not be escaped with backslashes or single quotes.
- Preprocessor can't handle nested lists and dicts.
- Proprocessor iterates over files multiple times.
- Loading a file should halt on first error.
- Strings in quotes containing spaces count as seperate arguments.
- Strings in quotes are never stripped of their quotes.

Feature Ideas:
- Allow a default value for dict inputs, e.g. take salt -> {salt:1}
- Allow user input to omit brackets in list and dict input, use inference
- Allow commenting on options for detailed help.
- Optional function to parse argv in same malt syntax.
- Allow implicitly given options i.e. autocommands.
- Use typestring like {i} for sets instead of dicts.
- Typestring inference from default argument.
    - "i:int=100" -> "int=100"
    - "f:float=1.0" -> "float=1.0"
    - "[]:list=[]" -> "list=[]"
    - "{}:dict={}" -> "dict={}"
    - "b:bool=True" -> ???
    - But what if you want a string '100'?
    - Probably just use 's:var=100' to be explicit
- Reimplement syntax hints?
- Alternative option specification using function signatures.
- Built-in help functions.
